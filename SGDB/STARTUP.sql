DROP DATABASE IF EXISTS STARTUP;
CREATE DATABASE STARTUP;
USE STARTUP;

CREATE TABLE ASSOCIADO (
	 IDASSOCIADO INT PRIMARY KEY AUTO_INCREMENT NOT NULL
    , NOME VARCHAR(200)
    , SEXO ENUM("M","F")
    , IDADE INT
);
CREATE TABLE DRONE(
	 IDDRONE INT PRIMARY KEY AUTO_INCREMENT NOT NULL
    ,NOME VARCHAR(200)
);

CREATE TABLE PONTOS_INTERESSE(
	  IDPONTOS_INTERESSE INT PRIMARY KEY AUTO_INCREMENT NOT NULL
    , LATITUDE INT NOT NULL
    , LONGITUDE INT NOT NULL
    , IDASSOCIADO INT NOT NULL
    , FOREIGN KEY (IDASSOCIADO) REFERENCES ASSOCIADO(IDASSOCIADO)
 );
 
CREATE TABLE OPERADOR (
	 IDOPERADOR INT PRIMARY KEY AUTO_INCREMENT NOT NULL
    ,NOME VARCHAR(200)
    ,SEXO ENUM("M","F")
);
CREATE TABLE CHAMADO(
	 IDCHAMADO INT PRIMARY KEY AUTO_INCREMENT NOT NULL
    ,TIPO ENUM("ESCOLTA","VIGILANCIA") NOT NULL
	,IDASSOCIADO INT NOT NULL
	,IDPONTOS_INTERESSE INT NOT NULL
    ,IDDRONE INT NOT NULL
    ,IDOPERADOR INT NOT NULL
    ,DTTIME_SOLICITACAO DATETIME NOT NULL 
    ,DTTIME_ACIONAMENTO DATETIME
    ,DTTIME_CHEGADA DATETIME
    ,DTTIME_LIBERACAO DATETIME
	,FOREIGN KEY (IDOPERADOR) REFERENCES OPERADOR(IDOPERADOR)
    ,FOREIGN KEY (IDASSOCIADO) REFERENCES ASSOCIADO(IDASSOCIADO)
    ,FOREIGN KEY (IDPONTOS_INTERESSE) REFERENCES PONTOS_INTERESSE(IDPONTOS_INTERESSE)
	,FOREIGN KEY (IDDRONE) REFERENCES DRONE(IDDRONE)
);

CREATE TABLE IMAGEM (
	 IDIMAGEM INT PRIMARY KEY AUTO_INCREMENT NOT NULL
    , NOME VARCHAR(255)
	, IDCHAMADO INT NOT NULL
    , FOREIGN KEY (IDCHAMADO) REFERENCES CHAMADO(IDCHAMADO)
);

CREATE TABLE VIDEO (
	 IDVIDEO INT PRIMARY KEY AUTO_INCREMENT NOT NULL
    , NOME VARCHAR(255)
	, IDCHAMADO INT NOT NULL
    , FOREIGN KEY (IDCHAMADO) REFERENCES CHAMADO(IDCHAMADO)
);

CREATE TABLE HIST_ASSOCIADO (
	 IDHIST_ASSOCIADO INT PRIMARY KEY AUTO_INCREMENT NOT NULL
    ,IDCLIENTE_DEPOIS INT
    ,IDCLIENTE_ANTES INT
    ,NOME_ANTES VARCHAR(200)
	,NOME_DEPOIS VARCHAR(200)
    ,SEXO_DEPOIS ENUM("M","F")
    ,SEXO_ANTES ENUM("M","F")
    ,ACAO ENUM("INSERT","UPDATE","DELETE")
    ,IDADE_DEPOIS INT
    ,IDADE_ANTES INT
    ,DT_ACAO DATETIME
    ,USUARIO VARCHAR(200)
); 

CREATE TABLE HIST_DRONE(
	 IDHIST_DRONE INT PRIMARY KEY AUTO_INCREMENT NOT NULL
    ,IDDRONE_DEPOIS INT
    ,IDDRONE_ANTES INT
    ,NOME_DEPOIS VARCHAR(200)
    ,NOME_ANTES VARCHAR(200)
    ,DT_ACAO DATETIME
    ,USUARIO VARCHAR(200)
    ,ACAO ENUM("INSERT","UPDATE","DELETE")
);


CREATE TABLE HIST_PONTOS_INTERESSE(
	 IDHIST_PONTOS_INTERESSE INT PRIMARY KEY AUTO_INCREMENT NOT NULL
    ,IDPONTOS_INTERESSEDEPOIS INT
    ,IDPONTOS_INTERESSEANTES INT
    ,LATITUDE_DEPOIS INT 
    ,LATITUDE_ANTES INT 
    ,LONGITUDE_DEPOIS INT 
    ,LONGITUDE_ANTES INT 
    ,IDASSOCIADO_DEPOIS INT
    ,IDASSOCIADO_ANTES INT
    ,DT_ACAO DATETIME
    ,USUARIO VARCHAR(200)
    ,ACAO ENUM("INSERT","UPDATE","DELETE")
 );


CREATE TABLE HIST_OPERADOR (
	 IDHIST_OPERADOR INT PRIMARY KEY AUTO_INCREMENT NOT NULL
    ,IDOPERADOR_DEPOIS INT
    ,IDOPERADOR_ANTES INT
    ,NOME_ANTES VARCHAR(200)
	,NOME_DEPOIS VARCHAR(200)
    ,SEXO_DEPOIS ENUM("M","F")
    ,SEXO_ANTES ENUM("M","F")
    ,ACAO ENUM("INSERT","UPDATE","DELETE")
    ,DT_ACAO DATETIME
    ,USUARIO VARCHAR(200)
);


CREATE TABLE HIST_CHAMADO(
	 IDHIST_CHAMADO INT PRIMARY KEY AUTO_INCREMENT NOT NULL

    ,IDCHAMADO_ANTES INT
    ,IDCHAMADO_DEPOIS INT
    ,TIPO_ANTES ENUM("ESCOLTA","VIGILANCIA") 
    ,TIPO_DEPOIS ENUM("ESCOLTA","VIGILANCIA") 
	,IDASSOCIADO_ANTES INT
    ,IDASSOCIADO_DEPOIS INT
	,IDPONTOS_INTERESSE_ANTES INT 
    ,IDPONTOS_INTERESSE_DEPOIS INT
    ,IDDRONE_ANTES INT
    ,IDDRONE_DEPOIS INT
    ,IDOPERADOR_ANTES INT
    ,IDOPERADOR_DEPOIS INT
    ,DTTIME_SOLICITACAO_ANTES DATETIME
    ,DTTIME_SOLICITACAO_DEPOIS DATETIME
    ,DTTIME_ACIONAMENTO_ANTES DATETIME
    ,DTTIME_ACIONAMENTO_DEPOIS DATETIME
    ,DTTIME_CHEGADA_ANTES DATETIME
    ,DTTIME_CHEGADA_DEPOIS DATETIME
    ,DTTIME_LIBERACAO_ANTES DATETIME
    ,DTTIME_LIBERACAO_DEPOIS DATETIME
    ,ACAO ENUM("INSERT","UPDATE","DELETE")
    ,DT_ACAO DATETIME
    ,USUARIO VARCHAR(200)
);


CREATE TABLE HIST_IMAGEM (
	  IDHIST_IMAGEM INT PRIMARY KEY AUTO_INCREMENT NOT NULL
    , IDIMAGEM_ANTES INT
    , IDIMAGEM_DEPOIS INT
    , NOME_ANTES VARCHAR(255)
    , NOME_DEPOIS VARCHAR(255)
	, IDCHAMADO_ANTES INT
    , IDCHAMADO_DEPOIS INT
    ,ACAO ENUM("INSERT","UPDATE","DELETE")
    ,DT_ACAO DATETIME
    ,USUARIO VARCHAR(200)
);

CREATE TABLE HIST_VIDEO (
	  IDHIST_VIDEO INT PRIMARY KEY AUTO_INCREMENT NOT NULL
    , IDVIDEO_ANTES INT
    , IDVIDEO_DEPOIS INT
    , NOME_ANTES VARCHAR(255)
    , NOME_DEPOIS VARCHAR(255)
	, IDCHAMADO_ANTES INT
    , IDCHAMADO_DEPOIS INT
    ,ACAO ENUM("INSERT","UPDATE","DELETE")
    ,DT_ACAO DATETIME
    ,USUARIO VARCHAR(200)
);


DELIMITER $$
CREATE TRIGGER TR_CHAMADO_VERIFICA_DISP_DRONE_BI BEFORE INSERT ON CHAMADO FOR EACH  ROW
BEGIN 
		DECLARE vDISP_DRONE INT ;
        
        SELECT COUNT(*) INTO vDISP_DRONE FROM CHAMADO WHERE IDDRONE = NEW.IDDRONE AND  DTTIME_LIBERACAO IS NULL;
		
        IF vDISP_DRONE > 0 THEN
		 SIGNAL SQLSTATE "45000" SET MESSAGE_TEXT = "DRONE NÃO DISPONÍVEL";
        END IF;
END $$
CREATE TRIGGER TR_CHAMADO_VALIDA_DATAS_BI BEFORE INSERT ON CHAMADO FOR EACH ROW
BEGIN 	
	
    IF DATEDIFF(NEW.DTTIME_SOLICITACAO, NEW.DTTIME_ACIONAMENTO) > 0 THEN
		SIGNAL SQLSTATE "45000" SET MESSAGE_TEXT = "DATAS ESTÃO ERRADAS, FAVOR COLOCALAS DE FORMA CRESCENTE";
    END IF;
    
    IF DATEDIFF(NEW.DTTIME_ACIONAMENTO, NEW.DTTIME_CHEGADA) > 0 THEN
		SIGNAL SQLSTATE "45000" SET MESSAGE_TEXT = "DATAS ESTÃO ERRADAS, FAVOR COLOCALAS DE FORMA CRESCENTE";
    END IF;
    
    IF DATEDIFF(NEW.DTTIME_ACIONAMENTO, NEW.DTTIME_LIBERACAO) > 0 THEN
		SIGNAL SQLSTATE "45000" SET MESSAGE_TEXT = "DATAS ESTÃO ERRADAS, FAVOR COLOCALAS DE FORMA CRESCENTE";
    END IF;
	
END $$

CREATE TRIGGER TR_ASSOCIADO_LOG_AI AFTER INSERT ON ASSOCIADO FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
     INSERT INTO HIST_ASSOCIADO
     (IDCLIENTE_DEPOIS,IDCLIENTE_ANTES,NOME_ANTES,NOME_DEPOIS,IDADE_ANTES,IDADE_DEPOIS,ACAO,DT_ACAO,USUARIO,SEXO_DEPOIS,SEXO_ANTES)
     VALUES (NEW.IDASSOCIADO,NEW.IDASSOCIADO,NEW.NOME,NEW.NOME,NEW.IDADE,NEW.IDADE,"INSERT",NOW(),vUSUARIO,NEW.SEXO,NEW.SEXO);
END $$

CREATE TRIGGER TR_ASSOCIADO_LOG_AD AFTER DELETE ON ASSOCIADO FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
     INSERT INTO HIST_ASSOCIADO
     (IDCLIENTE_DEPOIS,IDCLIENTE_ANTES,NOME_ANTES,NOME_DEPOIS,IDADE_ANTES,IDADE_DEPOIS,ACAO,DT_ACAO,USUARIO,SEXO_DEPOIS,SEXO_ANTES)
     VALUES (NULL,OLD.IDASSOCIADO,OLD.NOME,NULL,OLD.IDADE,NULL,"DELETE",NOW(),vUSUARIO,OLD.SEXO,OLD.SEXO);
END $$

CREATE TRIGGER TR_ASSOCIADO_LOG_AU AFTER UPDATE ON ASSOCIADO FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
     INSERT INTO HIST_ASSOCIADO
     (IDCLIENTE_DEPOIS,IDCLIENTE_ANTES,NOME_ANTES,NOME_DEPOIS,IDADE_ANTES,IDADE_DEPOIS,ACAO,DT_ACAO,USUARIO,SEXO_DEPOIS,SEXO_ANTES)
     VALUES (NEW.IDASSOCIADO,OLD.IDASSOCIADO,NEW.NOME,OLD.NOME,OLD.IDADE,NEW.IDADE,"UPDATE",NOW(),vUSUARIO,NEW.SEXO,OLD.SEXO);
END $$


CREATE TRIGGER TR_DRONE_LOG_AI AFTER INSERT ON DRONE FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
  INSERT INTO HIST_DRONE 
  (IDDRONE_DEPOIS,IDDRONE_ANTES,NOME_DEPOIS ,NOME_ANTES ,DT_ACAO,USUARIO,ACAO) 
  VALUES (NEW.IDDRONE,NEW.IDDRONE, NEW.NOME,NEW.NOME,NOW(), vUSUARIO, "INSERT");
END $$


CREATE TRIGGER TR_DRONE_LOG_AD AFTER DELETE ON DRONE FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
  INSERT INTO HIST_DRONE 
  (IDDRONE_DEPOIS,IDDRONE_ANTES,NOME_DEPOIS ,NOME_ANTES ,DT_ACAO,USUARIO,ACAO) 
  VALUES (NULL,OLD.IDDRONE, NULL,OLD.NOME,NOW(), vUSUARIO, "DELETE");
END $$

CREATE TRIGGER TR_DRONE_LOG_AU AFTER UPDATE ON DRONE FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
  INSERT INTO HIST_DRONE 
  (IDDRONE_DEPOIS,IDDRONE_ANTES,NOME_DEPOIS ,NOME_ANTES ,DT_ACAO,USUARIO,ACAO) 
  VALUES (OLD.IDDRONE,NEW.IDDRONE, OLD.NOME,NEW.NOME,NOW(), vUSUARIO, "UPDATE");
END $$




CREATE TRIGGER TR_PONTOS_INTERESSE_LOG_AI AFTER INSERT ON PONTOS_INTERESSE FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
    INSERT INTO HIST_PONTOS_INTERESSE (IDPONTOS_INTERESSEDEPOIS,IDPONTOS_INTERESSEANTES,LATITUDE_DEPOIS,LATITUDE_ANTES,LONGITUDE_DEPOIS,LONGITUDE_ANTES,IDASSOCIADO_DEPOIS,IDASSOCIADO_ANTES,DT_ACAO,USUARIO,ACAO)
    VALUES 
    (NEW.IDPONTOS_INTERESSE,NEW.IDPONTOS_INTERESSE,NEW.LATITUDE,NEW.LATITUDE,NEW.LONGITUDE,NEW.LONGITUDE,NEW.IDASSOCIADO,NEW.IDASSOCIADO,NOW(),vUSUARIO,"INSERT");

END $$


CREATE TRIGGER TR_PONTOS_INTERESSE_LOG_AD AFTER DELETE ON PONTOS_INTERESSE FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
    INSERT INTO HIST_PONTOS_INTERESSE
    (IDPONTOS_INTERESSEDEPOIS,IDPONTOS_INTERESSEANTES,LATITUDE_DEPOIS,LATITUDE_ANTES,LONGITUDE_DEPOIS,LONGITUDE_ANTES,IDASSOCIADO_DEPOIS,IDASSOCIADO_ANTES,DT_ACAO,USUARIO,ACAO)
    VALUES (NULL,OLD.IDPONTOS_INTERESSE,NULL,OLD.LATITUDE,NULL,OLD.LONGITUDE,NULL,OLD.IDASSOCIADO,NOW(),vUSUARIO,"DELETE");

END $$


CREATE TRIGGER TR_PONTOS_INTERESSE_LOG_AU AFTER UPDATE ON PONTOS_INTERESSE FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
    INSERT INTO HIST_PONTOS_INTERESSE
    (IDPONTOS_INTERESSEDEPOIS,IDPONTOS_INTERESSEANTES,LATITUDE_DEPOIS,LATITUDE_ANTES,LONGITUDE_DEPOIS,LONGITUDE_ANTES,IDASSOCIADO_DEPOIS,IDASSOCIADO_ANTES,DT_ACAO,USUARIO,ACAO)
    VALUES (NEW.IDPONTOS_INTERESSE,OLD.IDPONTOS_INTERESSE,NEW.LATITUDE,OLD.LATITUDE,NEW.LONGITUDE,OLD.LONGITUDE,NEW.IDASSOCIADO,OLD.IDASSOCIADO,NOW(),vUSUARIO,"UPDATE");

END $$




CREATE TRIGGER TR_OPERADOR_LOG_AI AFTER INSERT ON OPERADOR FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
    INSERT INTO HIST_OPERADOR 
    (IDOPERADOR_DEPOIS,IDOPERADOR_ANTES, NOME_ANTES,NOME_DEPOIS,SEXO_DEPOIS,SEXO_ANTES,ACAO,DT_ACAO,USUARIO)
    VALUES (NEW.IDOPERADOR,NEW.IDOPERADOR,NEW.NOME,NEW.NOME,NEW.SEXO,NEW.SEXO,"INSERT",NOW(),vUSUARIO);
    
END $$


CREATE TRIGGER TR_OPERADOR_LOG_AD AFTER DELETE ON OPERADOR FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
    INSERT INTO HIST_OPERADOR 
    (IDOPERADOR_DEPOIS,IDOPERADOR_ANTES, NOME_ANTES,NOME_DEPOIS,SEXO_DEPOIS,SEXO_ANTES,ACAO,DT_ACAO,USUARIO)
    VALUES (NULL,OLD.IDOPERADOR,OLD.NOME,NULL,NULL,OLD.SEXO,"DELETE",NOW(),vUSUARIO);
    
END $$


CREATE TRIGGER TR_OPERADOR_LOG_AU AFTER UPDATE ON OPERADOR FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
    INSERT INTO HIST_OPERADOR 
    (IDOPERADOR_DEPOIS,IDOPERADOR_ANTES, NOME_ANTES,NOME_DEPOIS,SEXO_DEPOIS,SEXO_ANTES,ACAO,DT_ACAO,USUARIO)
    VALUES (OLD.IDOPERADOR,NEW.IDOPERADOR,NEW.NOME,OLD.NOME,NEW.SEXO,OLD.SEXO,"UPDATE",NOW(),vUSUARIO);
    
END $$





CREATE TRIGGER TR_CHAMADO_LOG_AI AFTER INSERT ON CHAMADO FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
   
    INSERT INTO HIST_CHAMADO 
    ( IDCHAMADO_ANTES,IDCHAMADO_DEPOIS ,TIPO_ANTES ,TIPO_DEPOIS,IDASSOCIADO_ANTES,IDASSOCIADO_DEPOIS,
      IDPONTOS_INTERESSE_ANTES ,IDPONTOS_INTERESSE_DEPOIS,IDDRONE_ANTES,IDDRONE_DEPOIS,
      IDOPERADOR_ANTES,IDOPERADOR_DEPOIS,DTTIME_SOLICITACAO_ANTES,DTTIME_SOLICITACAO_DEPOIS,
      DTTIME_ACIONAMENTO_ANTES,DTTIME_ACIONAMENTO_DEPOIS,DTTIME_CHEGADA_ANTES,DTTIME_CHEGADA_DEPOIS,
      DTTIME_LIBERACAO_ANTES,DTTIME_LIBERACAO_DEPOIS,ACAO ,DT_ACAO ,USUARIO)

    VALUES (NEW.IDCHAMADO,NEW.IDCHAMADO,NEW.TIPO,NEW.TIPO,NEW.IDASSOCIADO,NEW.IDASSOCIADO,
            NEW.IDPONTOS_INTERESSE,NEW.IDPONTOS_INTERESSE,NEW.IDDRONE,NEW.IDDRONE,NEW.IDOPERADOR,
            NEW.IDOPERADOR,NEW.DTTIME_SOLICITACAO,NEW.DTTIME_SOLICITACAO,NEW.DTTIME_ACIONAMENTO,
            NEW.DTTIME_ACIONAMENTO,NEW.DTTIME_CHEGADA,NEW.DTTIME_CHEGADA,NEW.DTTIME_LIBERACAO,
            NEW.DTTIME_LIBERACAO,"INSERT" ,NOW(),vUSUARIO);
END $$



CREATE TRIGGER TR_CHAMADO_LOG_AD AFTER DELETE ON CHAMADO FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
   
    INSERT INTO HIST_CHAMADO 
    ( IDCHAMADO_ANTES,IDCHAMADO_DEPOIS ,TIPO_ANTES ,TIPO_DEPOIS,IDASSOCIADO_ANTES,IDASSOCIADO_DEPOIS,
      IDPONTOS_INTERESSE_ANTES ,IDPONTOS_INTERESSE_DEPOIS,IDDRONE_ANTES,IDDRONE_DEPOIS,
      IDOPERADOR_ANTES,IDOPERADOR_DEPOIS,DTTIME_SOLICITACAO_ANTES,DTTIME_SOLICITACAO_DEPOIS,
      DTTIME_ACIONAMENTO_ANTES,DTTIME_ACIONAMENTO_DEPOIS,DTTIME_CHEGADA_ANTES,DTTIME_CHEGADA_DEPOIS,
      DTTIME_LIBERACAO_ANTES,DTTIME_LIBERACAO_DEPOIS,ACAO ,DT_ACAO ,USUARIO)

    VALUES (OLD.IDCHAMADO,NULL,OLD.TIPO,NULL,OLD.IDASSOCIADO,NULL,
            OLD.IDPONTOS_INTERESSE,NULL,OLD.IDDRONE,NULL,OLD.IDOPERADOR,
            NULL,OLD.DTTIME_SOLICITACAO,NULL,OLD.DTTIME_ACIONAMENTO,
            NULL,OLD.DTTIME_CHEGADA,NULL,OLD.DTTIME_LIBERACAO,
            NULL,"DELETE" ,NOW(),vUSUARIO);
END $$


CREATE TRIGGER TR_CHAMADO_LOG_AU AFTER UPDATE ON CHAMADO FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
   
    INSERT INTO HIST_CHAMADO 
    ( IDCHAMADO_ANTES,IDCHAMADO_DEPOIS ,TIPO_ANTES ,TIPO_DEPOIS,IDASSOCIADO_ANTES,IDASSOCIADO_DEPOIS,
      IDPONTOS_INTERESSE_ANTES ,IDPONTOS_INTERESSE_DEPOIS,IDDRONE_ANTES,IDDRONE_DEPOIS,
      IDOPERADOR_ANTES,IDOPERADOR_DEPOIS,DTTIME_SOLICITACAO_ANTES,DTTIME_SOLICITACAO_DEPOIS,
      DTTIME_ACIONAMENTO_ANTES,DTTIME_ACIONAMENTO_DEPOIS,DTTIME_CHEGADA_ANTES,DTTIME_CHEGADA_DEPOIS,
      DTTIME_LIBERACAO_ANTES,DTTIME_LIBERACAO_DEPOIS,ACAO ,DT_ACAO ,USUARIO)

    VALUES (OLD.IDCHAMADO,NEW.IDCHAMADO,OLD.TIPO,NEW.TIPO,OLD.IDASSOCIADO,NEW.IDASSOCIADO,
            OLD.IDPONTOS_INTERESSE,NEW.IDPONTOS_INTERESSE,OLD.IDDRONE,NEW.IDDRONE,OLD.IDOPERADOR,
            NEW.IDOPERADOR,OLD.DTTIME_SOLICITACAO,NEW.DTTIME_SOLICITACAO,OLD.DTTIME_ACIONAMENTO,
            NEW.DTTIME_ACIONAMENTO,OLD.DTTIME_CHEGADA,NEW.DTTIME_CHEGADA,OLD.DTTIME_LIBERACAO,
            NEW.DTTIME_LIBERACAO,"UPDATE" ,NOW(),vUSUARIO);
END $$




CREATE TRIGGER TR_IMAGEM_LOG_AI AFTER INSERT ON IMAGEM FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
    INSERT INTO HIST_IMAGEM (IDIMAGEM_ANTES,IDIMAGEM_DEPOIS,NOME_ANTES,NOME_DEPOIS,IDCHAMADO_ANTES,IDCHAMADO_DEPOIS,DT_ACAO,USUARIO,ACAO) 
    VALUES (NEW.IDIMAGEM,NEW.IDIMAGEM,NEW.NOME,NEW.NOME,NEW.IDCHAMADO,NEW.IDCHAMADO,NOW(),vUSUARIO,"INSERT");


END $$
-- 
CREATE TRIGGER TR_IMAGEM_LOG_AD AFTER DELETE ON IMAGEM FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
    INSERT INTO HIST_IMAGEM (IDIMAGEM_ANTES,IDIMAGEM_DEPOIS,NOME_ANTES,NOME_DEPOIS,IDCHAMADO_ANTES,IDCHAMADO_DEPOIS,DT_ACAO,USUARIO,ACAO) 
    VALUES (OLD.IDIMAGEM,NULL,OLD.NOME,NULL,OLD.IDCHAMADO,NULL,NOW(),vUSUARIO,"DELETE");


END $$


CREATE TRIGGER TR_IMAGEM_LOG_AU AFTER UPDATE ON IMAGEM FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
    INSERT INTO HIST_IMAGEM (IDIMAGEM_ANTES,IDIMAGEM_DEPOIS,NOME_ANTES,NOME_DEPOIS,IDCHAMADO_ANTES,IDCHAMADO_DEPOIS,DT_ACAO,USUARIO,ACAO) 
    VALUES (OLD.IDIMAGEM,NEW.IDIMAGEM,OLD.NOME,NEW.NOME,OLD.IDCHAMADO,NEW.IDCHAMADO,NOW(),vUSUARIO,"UPDATE");

END $$

CREATE TRIGGER TR_VIDEO_LOG_AI AFTER INSERT ON VIDEO FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
    INSERT INTO HIST_VIDEO (IDVIDEO_ANTES,IDVIDEO_DEPOIS,NOME_ANTES,NOME_DEPOIS,IDCHAMADO_ANTES,IDCHAMADO_DEPOIS,DT_ACAO,USUARIO,ACAO) 
    VALUES (NEW.IDVIDEO,NEW.IDVIDEO,NEW.NOME,NEW.NOME,NEW.IDCHAMADO,NEW.IDCHAMADO,NOW(),vUSUARIO,"INSERT");


END $$

CREATE TRIGGER TR_VIDEO_LOG_AD AFTER DELETE ON VIDEO FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
    INSERT INTO HIST_VIDEO (IDVIDEO_ANTES,IDVIDEO_DEPOIS,NOME_ANTES,NOME_DEPOIS,IDCHAMADO_ANTES,IDCHAMADO_DEPOIS,DT_ACAO,USUARIO,ACAO) 
    VALUES (OLD.IDVIDEO,NULL,OLD.NOME,NULL,OLD.IDCHAMADO,NULL,NOW(),vUSUARIO,"DELETE");


END $$


CREATE TRIGGER TR_VIDEO_LOG_AU AFTER UPDATE ON VIDEO FOR EACH ROW
BEGIN
	 DECLARE vUSUARIO TEXT;
     
     SET vUSUARIO = SUBSTR(CURRENT_USER(), 1, (LOCATE("@", CURRENT_USER()) - 1));
     
    INSERT INTO HIST_VIDEO (IDVIDEO_ANTES,IDVIDEO_DEPOIS,NOME_ANTES,NOME_DEPOIS,IDCHAMADO_ANTES,IDCHAMADO_DEPOIS,DT_ACAO,USUARIO,ACAO) 
    VALUES (OLD.IDVIDEO,NEW.IDVIDEO,OLD.NOME,NEW.NOME,OLD.IDCHAMADO,NEW.IDCHAMADO,NOW(),vUSUARIO,"UPDATE");

DELIMITER ;



INSERT INTO ASSOCIADO (IDASSOCIADO, NOME,SEXO,IDADE) VALUES(NULL,"JADSON DOS SANTOS SILVA","M",21);
INSERT INTO ASSOCIADO (IDASSOCIADO, NOME,SEXO,IDADE) VALUES(NULL,"CASSIA BARBOSA DOS SANTOS","F",43);


INSERT INTO DRONE (IDDRONE, NOME) VALUES(NULL,"FFFFF1");

INSERT INTO PONTOS_INTERESSE (IDPONTOS_INTERESSE, LATITUDE,LONGITUDE,IDASSOCIADO) VALUES(NULL,27.5733153,-48.5287276,1);

INSERT INTO OPERADOR (IDOPERADOR, NOME,SEXO) VALUES(NULL,"PEDRO ALVES","M");

INSERT INTO CHAMADO 
(IDCHAMADO, TIPO,IDASSOCIADO,IDPONTOS_INTERESSE,IDDRONE,IDOPERADOR,DTTIME_SOLICITACAO,DTTIME_ACIONAMENTO,DTTIME_CHEGADA,DTTIME_LIBERACAO)  
VALUES (NULL, "VIGILANCIA",1,1,1,1,"2020-06-16 20:38:56","2020-06-17 18:38:16","2020-06-17 21:38:16","2020-06-18 21:38:16");

INSERT INTO IMAGEM (IDIMAGEM,NOME,IDCHAMADO) VALUES (NULL,"IMAGEM-CASA-DO-JADSON.png",1);

INSERT INTO VIDEO (IDVIDEO,NOME,IDCHAMADO) VALUES (NULL,"IMAGEM-CASA-DO-JADSON.mp4",1);

CREATE VIEW VW_TEMPO_ATENDIMENTO AS SELECT 
DATEDIFF(DTTIME_SOLICITACAO,DTTIME_ACIONAMENTO) AS "TEMPO_DE_UM_ATENDIMENTO",
DATEDIFF(DTTIME_ACIONAMENTO,DTTIME_CHEGADA) AS "TEMPO_DE_DESLOCAMENTO",
DATEDIFF(DTTIME_CHEGADA,DTTIME_LIBERACAO) AS "TEMPO_DE_ATENDIMENTO",
DATEDIFF(DTTIME_ACIONAMENTO,DTTIME_LIBERACAO) AS "TEMPO_TOTAL_ATENDIMENTO"
FROM CHAMADO
WHERE  
 TIPO = "VIGILANCIA" ;
 
 
 CREATE VIEW VW_TODAS_AS_SOLICITACOES AS SELECT 
 ASSOCIADO.*,
 CHAMADO.TIPO,
 CHAMADO.DTTIME_SOLICITACAO
 FROM CHAMADO
	INNER JOIN ASSOCIADO ON
	CHAMADO.IDASSOCIADO = ASSOCIADO.IDASSOCIADO
ORDER BY 
	 CHAMADO.DTTIME_SOLICITACAO; 
     


UPDATE IMAGEM SET NOME = "IMAGEM-CASA-DO-JADSON-1.png" WHERE IDIMAGEM = 1;
DELETE FROM IMAGEM WHERE IDIMAGEM = 1;

UPDATE VIDEO SET NOME = "IMAGEM-CASA-DO-JADSON-1.mp4" WHERE IDVIDEO = 1;
DELETE FROM VIDEO WHERE IDVIDEO = 1;


UPDATE CHAMADO SET IDPONTOS_INTERESSE = 1 WHERE IDCHAMADO = 1;
DELETE FROM CHAMADO WHERE IDCHAMADO = 1;


UPDATE OPERADOR SET NOME = "JADSON SANTOS", SEXO = "M" WHERE IDOPERADOR = 1;
DELETE FROM OPERADOR WHERE IDOPERADOR = 1;

UPDATE PONTOS_INTERESSE SET LATITUDE = 27.5733153, LONGITUDE = -48.5287276 , IDASSOCIADO = 1 WHERE IDASSOCIADO = 1;
DELETE FROM PONTOS_INTERESSE WHERE IDPONTOS_INTERESSE = 1;

UPDATE DRONE SET NOME = "FFFFFF" WHERE IDDRONE = 1;
DELETE FROM DRONE WHERE IDDRONE = 1;


UPDATE ASSOCIADO SET NOME = "PAULO ROSA", SEXO = "M" , IDADE = 27 WHERE IDASSOCIADO = 1;
DELETE FROM ASSOCIADO WHERE IDASSOCIADO = 1;

UPDATE ASSOCIADO SET NOME = "JADSON SANTOS", SEXO = "M" , IDADE = 22 WHERE IDASSOCIADO = 2;
DELETE FROM ASSOCIADO WHERE IDASSOCIADO = 2;


SELECT * FROM  ASSOCIADO;
SELECT * FROM  DRONE;
SELECT *  FROM PONTOS_INTERESSE;
SELECT * FROM  OPERADOR;
SELECT * FROM  CHAMADO;
SELECT * FROM  VIDEO;
SELECT * FROM  IMAGEM; 

SELECT * FROM  HIST_ASSOCIADO;
SELECT * FROM  HIST_DRONE;
SELECT *  FROM HIST_PONTOS_INTERESSE;
SELECT * FROM  HIST_OPERADOR;
SELECT * FROM  HIST_CHAMADO;
SELECT * FROM  HIST_VIDEO;
SELECT * FROM  HIST_IMAGEM; 
