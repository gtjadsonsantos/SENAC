DROP DATABASE IF EXISTS DBCARTAOCREDITO;

CREATE DATABASE DBCARTAOCREDITO;

USE DBCARTAOCREDITO;

CREATE TABLE CLIENTE (
	IDCLIENTE INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(100) NOT NULL,
	CPF CHAR(11) NOT NULL,
	RG VARCHAR(16),
	LOGRADOURO VARCHAR(100),
	NUMERO VARCHAR(10),
	BAIRRO VARCHAR(100),
	CIDADE VARCHAR(100),
	UF CHAR(2),
	COMPLEMENTO VARCHAR(100),
	DT_NASCIMENTO DATE,
	TELEFONE_RESIDENCIAL VARCHAR(15),
	TELEFONE_COMERCIAL VARCHAR(15),
	TELEFONE_RECADO VARCHAR(15)
);

CREATE TABLE CARTAO (
	IDCARTAO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	IDCLIENTE INT NOT NULL,
	NUMERO CHAR(17) NOT NULL,
	DIA_VENCIMENTO INT NOT NULL,
	LIMITE NUMERIC(8,2),
	CONSTRAINT FK_CARTAO_CLIENTE FOREIGN KEY (IDCLIENTE) REFERENCES CLIENTE(IDCLIENTE)
);

CREATE TABLE DEBITO (
	IDDEBITO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	IDCARTAO INT NOT NULL,
	DESCRICAO VARCHAR(255) NOT NULL,
	PARCELA INT,
	VALOR NUMERIC(8,2) NOT NULL, 
	DT_DEBITO DATETIME,
	CONSTRAINT FK_DEBITO_CARTAO FOREIGN KEY (IDCARTAO) REFERENCES CARTAO(IDCARTAO)
);

CREATE TABLE BOLETO (
	IDBOLETO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	IDCARTAO INT NOT NULL,
	DT_GERACAO DATE NOT NULL,
	DT_VENCIMENTO DATE NOT NULL,
	VALOR_TOTAL NUMERIC(8,2) NOT NULL, 
	DT_PAGAMENTO DATE,
	VALOR_PAGO NUMERIC(8,2), 
	CONSTRAINT FK_BOLETO_CLIENTE FOREIGN KEY (IDCARTAO) REFERENCES CARTAO(IDCARTAO)
);


CREATE TABLE ITEM_BOLETO (
	IDITEM_BOLETO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	IDBOLETO INT NOT NULL,
	IDDEBITO INT NOT NULL,
	CONSTRAINT FK_ITEM_BOLETO_BOLETO FOREIGN KEY (IDBOLETO) REFERENCES BOLETO(IDBOLETO),
	CONSTRAINT FK_ITEM_BOLETO_DEBITO FOREIGN KEY (IDDEBITO) REFERENCES DEBITO(IDDEBITO)
);


INSERT 
INTO CLIENTE
(NOME,CPF,RG,LOGRADOURO,NUMERO,BAIRRO,CIDADE,UF,COMPLEMENTO,DT_NASCIMENTO,TELEFONE_RESIDENCIAL,TELEFONE_COMERCIAL,TELEFONE_RECADO)
VALUES
("JADSON","37885788822","398727570","ALMIRANTE CARLOS DA SILVEIRA CAERNEIRO","394","AGRONÔMICA","FLORIANÓPOLIS","SC","CASA","1997-12-21","5548999328092","5548999328092","5548999328092");


INSERT 
INTO CARTAO
(IDCLIENTE,NUMERO,DIA_VENCIMENTO,LIMITE)
VALUES
(1,"000000000012",21,2100.00);


DELIMITER $$

CREATE TRIGGER TR_CLIENTE_BI BEFORE INSERT ON CLIENTE FOR EACH ROW
BEGIN

      IF LENGTH(NEW.CPF) > 11 OR LENGTH(NEW.CPF) < 11 THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "CPF INVÁLIDO";
      END IF;
END $$

CREATE TRIGGER TR_CARTAO_BI BEFORE INSERT ON CARTAO FOR EACH ROW
BEGIN
      
      IF LENGTH(SUBSTR(NEW.NUMERO, 1, 12)) > 12 OR LENGTH(SUBSTR(NEW.NUMERO, 1, 12)) < 12 OR  SUBSTR(NEW.NUMERO, LENGTH(NEW.NUMERO) - 1, LENGTH(NEW.NUMERO)) <> 12 THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "ERRO AO CADASTRAR O CARTÃO, TENTE NOVAMENTE";
      END IF;
      
END $$


CREATE PROCEDURE PR_REGISTRA_DEBITO(pIDCARTAO INT ,pDESCRICAO VARCHAR(255),pPARCELAS INT,pVALOR NUMERIC(8,2))
BEGIN 

    DECLARE vCOUNT INT DEFAULT 1;
    DECLARE vVALORPARCELA NUMERIC(8,2) DEFAULT 0.00;
		DECLARE vCREDITO NUMERIC(8,2);
		DECLARE vDAY INT;

		SET vDAY = 30;

		SELECT 
		LIMITE
		INTO vCREDITO
		FROM CARTAO
		WHERE 
			IDCARTAO = pIDCARTAO;

    SET vVALORPARCELA = pVALOR / pPARCELAS;

		IF (pVALOR <= vCREDITO ) THEN
    	WHILE vCOUNT <= pPARCELAS DO
    	  INSERT 
    	  INTO DEBITO (IDCARTAO, DESCRICAO, PARCELA, VALOR, DT_DEBITO)
    	  VALUES (pIDCARTAO,pDESCRICAO,vCOUNT,vVALORPARCELA, DATE_ADD(NOW(), INTERVAL vDAY DAY));
          
    	  SET vCOUNT = vCOUNT + 1;
				SET vDAY = vDAY + 30;
    	END WHILE;  

		ELSE 
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "CRÉDITO INSUFICIENTE"; 
		END IF;

END $$

CREATE PROCEDURE PR_GERABOLETO(pIDCARTAO INT,pDT_PAGAMENTO DATE ,pVALOR_PAGO NUMERIC(8,2))
BEGIN
	DECLARE vVALOR NUMERIC(8,2);
	DECLARE DIAS_ATRASADO INT;
	DECLARE STATUS_ULTIMO_BOLETO INT;
	DECLARE DIFERENCA NUMERIC(8,2);

	SELECT  (VALOR_TOTAL - IFNULL(VALOR_PAGO,0))
	INTO DIFERENCA
	FROM BOLETO
	WHERE IDCARTAO = pIDCARTAO AND MONTH(DT_VENCIMENTO) < MONTH(NOW()) OR 7;

	SELECT 
	IFNULL(DATEDIFF(DT_VENCIMENTO, DT_PAGAMENTO),0)
	INTO DIAS_ATRASADO
	FROM BOLETO
	WHERE IDCARTAO = pIDCARTAO ;
	
	SELECT 
	IFNULL(MIN(IDBOLETO),0)
	INTO STATUS_ULTIMO_BOLETO
	FROM BOLETO 
	WHERE IDCARTAO = pIDCARTAO AND DT_PAGAMENTO IS NULL LIMIT 1;

	SELECT 
	IFNULL(SUM(DEBITO.VALOR),0)
	INTO vVALOR
	FROM DEBITO
	  INNER JOIN CARTAO ON 
    DEBITO.IDCARTAO = CARTAO.IDCARTAO
	WHERE DEBITO.IDCARTAO = pIDCARTAO AND MONTH(DEBITO.DT_DEBITO) <= MONTH(NOW()) OR 5 AND   DAY(DEBITO.DT_DEBITO) <= 25 ;

	IF vVALOR > 0.00  THEN

		INSERT
		INTO BOLETO
    (IDCARTAO,DT_GERACAO,DT_VENCIMENTO,VALOR_TOTAL,DT_PAGAMENTO,VALOR_PAGO)
		VALUES (pIDCARTAO,NOW(), DATE_ADD(NOW(), INTERVAL 30 DAY),vVALOR, pDT_PAGAMENTO,pVALOR_PAGO);
	END IF;

	IF STATUS_ULTIMO_BOLETO > 0 THEN
		
		UPDATE 
		DEBITO 
		SET 
		VALOR = (VALOR * 0.02) + (DIAS_ATRASADO *  0.002 ),
		DESCRICAO = CONCAT (DESCRICAO, ";CASO A CONTA ESTEJA ATRASADA, GERA MULTA DE 2% PELO ATRASO; SE ATRASADO PAGAMENTO, MULTA POR DIA ATRASADO DE  0.002")
		WHERE IDDEBITO = vIDDEBITO ;

		IF DIFERENCA > 0.00 THEN 
			UPDATE 
			DEBITO 
			SET 
			VALOR = VALOR + DIFERENCA,
			DESCRICAO = CONCAT(DESCRICAO,"; COBRAÇA ADICIONADA PELOS BOLETOS ANTERIORES")
			WHERE IDDEBITO = vIDDEBITO;
		END IF;
		 
	END IF;
	
		INSERT 
		INTO ITEM_BOLETO (IDITEM_BOLETO, IDBOLETO, IDDEBITO) VALUES (NULL,
		(SELECT IDBOLETO FROM BOLETO WHERE IDCARTAO = pIDCARTAO ORDER BY IDBOLETO DESC LIMIT 1)
		,
		(SELECT IDDEBITO FROM DEBITO WHERE IDCARTAO = pIDCARTAO ORDER BY IDDEBITO DESC LIMIT 1)
		);

END $$	

DELIMITER ;


CALL PR_REGISTRA_DEBITO(1,"BOLA DE GUDE",2,30.00);
CALL PR_GERABOLETO(1,NOW(),30.00);

SELECT * FROM DEBITO;
SELECT * FROM BOLETO;
SELECT * FROM ITEM_BOLETO;



CREATE VIEW SALDO_DISPONIVEL AS 
SELECT 
CLIENTE.NOME,
(CARTAO.LIMITE - (BOLETO.VALOR_TOTAL - BOLETO.VALOR_PAGO)) AS SALDO
FROM BOLETO
	INNER JOIN  ITEM_BOLETO ON
    BOLETO.IDBOLETO = ITEM_BOLETO.IDBOLETO
	INNER JOIN DEBITO ON
    ITEM_BOLETO.IDDEBITO = DEBITO.IDDEBITO
	INNER JOIN CARTAO ON 
    DEBITO.IDCARTAO = CARTAO.IDCARTAO
    INNER JOIN CLIENTE ON 
    CARTAO.IDCLIENTE = CLIENTE.IDCLIENTE;


CREATE VIEW EXTRATO_COMPRA AS 
SELECT 
CLIENTE.IDCLIENTE,
CLIENTE.NOME,
CARTAO.NUMERO,
DEBITO.DT_DEBITO,
DEBITO.DESCRICAO,
DEBITO.PARCELA,
DEBITO.VALOR
FROM BOLETO
	INNER JOIN  ITEM_BOLETO ON
    BOLETO.IDBOLETO = ITEM_BOLETO.IDBOLETO
	INNER JOIN DEBITO ON
    ITEM_BOLETO.IDDEBITO = DEBITO.IDDEBITO
	INNER JOIN CARTAO ON 
    DEBITO.IDCARTAO = CARTAO.IDCARTAO
    INNER JOIN CLIENTE ON 
    CARTAO.IDCLIENTE = CLIENTE.IDCLIENTE;
    
    
CREATE VIEW NOMECLIENTE AS 
    SELECT 
	CLIENTE.NOME,
	CLIENTE.LOGRADOURO,
	CLIENTE.NUMERO,
	CLIENTE.BAIRRO,
	CLIENTE.CIDADE,
	CLIENTE.UF,
	CLIENTE.COMPLEMENTO,
    CONCAT(SUBSTR(CARTAO.NUMERO,1,2),"-",SUBSTR(CARTAO.NUMERO,3,8),"-",SUBSTR(CARTAO.NUMERO,11,12)),
    DEBITO.VALOR,
    DEBITO.DT_DEBITO
    FROM BOLETO
	INNER JOIN  ITEM_BOLETO ON
    BOLETO.IDBOLETO = ITEM_BOLETO.IDBOLETO
	INNER JOIN DEBITO ON
    ITEM_BOLETO.IDDEBITO = DEBITO.IDDEBITO
	INNER JOIN CARTAO ON 
    DEBITO.IDCARTAO = CARTAO.IDCARTAO
    INNER JOIN CLIENTE ON 
    CARTAO.IDCLIENTE = CLIENTE.IDCLIENTE;

CREATE VIEW ITEM_COBRADOS AS 
SELECT 
DEBITO.DESCRICAO,
DEBITO.DT_DEBITO,
DEBITO.VALOR,
IF(DEBITO.PARCELA > 1, CONCAT(1,"/",DEBITO.PARCELA), "1/1")
 FROM BOLETO
	INNER JOIN  ITEM_BOLETO ON
    BOLETO.IDBOLETO = ITEM_BOLETO.IDBOLETO
	INNER JOIN DEBITO ON
    ITEM_BOLETO.IDDEBITO = DEBITO.IDDEBITO
	INNER JOIN CARTAO ON 
    DEBITO.IDCARTAO = CARTAO.IDCARTAO
    INNER JOIN CLIENTE ON 
    CARTAO.IDCLIENTE = CLIENTE.IDCLIENTE;
    