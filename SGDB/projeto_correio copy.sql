SET SQL_SAFE_UPDATES = 0;

DROP DATABASE IF EXISTS DBACADEMICO;
CREATE DATABASE DBACADEMICO;
USE DBACADEMICO;

CREATE TABLE CURSO (
	IDCURSO INT NOT NULL AUTO_INCREMENT
	, NOME VARCHAR(100)
	, PRIMARY KEY (IDCURSO)
);

CREATE TABLE ALUNO (
	IDALUNO INT NOT NULL AUTO_INCREMENT
	, IDCURSO INT NOT NULL
	, NOME VARCHAR(100)
	, PRIMARY KEY (IDALUNO)
	, FOREIGN KEY (IDCURSO) REFERENCES CURSO (IDCURSO)
);

CREATE TABLE DISCIPLINA (
	IDDISCIPLINA INT NOT NULL AUTO_INCREMENT
	, NOME VARCHAR(100)
	, CARGA_HORARIA INT
	, PRIMARY KEY (IDDISCIPLINA)
);

CREATE TABLE GRADECURRICULAR (	
	IDGRADECURRICULAR INT NOT NULL AUTO_INCREMENT
	, IDCURSO INT NOT NULL
	, IDDISCIPLINA INT NOT NULL
	, SEMESTRE INT
	, IDDISCIPLINA_REQUISITO INT 
	, PRIMARY KEY (IDGRADECURRICULAR)
	, FOREIGN KEY (IDCURSO) REFERENCES CURSO(IDCURSO)
	, FOREIGN KEY (IDDISCIPLINA) REFERENCES DISCIPLINA(IDDISCIPLINA)
	, FOREIGN KEY (IDDISCIPLINA_REQUISITO) REFERENCES DISCIPLINA(IDDISCIPLINA)
);

CREATE TABLE MATRICULA (
	IDMATRICULA INT NOT NULL AUTO_INCREMENT
	, IDALUNO INT NOT NULL
	, IDDISCIPLINA INT NOT NULL
	, ANO INT
	, SEMESTRE INT
	, SITUACAO ENUM ('Aprovado', 'Reprovado', 'Matriculado', 'Cancelado')
	, FINALIZADA ENUM('S', 'N')
	, PRIMARY KEY (IDMATRICULA)
	, FOREIGN KEY (IDALUNO)REFERENCES ALUNO (IDALUNO)
	, FOREIGN KEY (IDDISCIPLINA) REFERENCES DISCIPLINA (IDDISCIPLINA)
);

CREATE TABLE CONCEITO (
	IDALUNO INT NOT NULL 
	, IDMATRICULA INT NOT NULL
	, INDICADOR VARCHAR(30)
	, CONCEITO ENUM ('Não Avalida', 'Insatisfatório', 'Satisfatorio', 'Bom', 'Ótimo')
	, PRIMARY KEY (IDALUNO, IDMATRICULA, INDICADOR)
	, FOREIGN KEY (IDALUNO)REFERENCES ALUNO (IDALUNO)
	, FOREIGN KEY (IDMATRICULA)REFERENCES MATRICULA (IDMATRICULA)
);

INSERT INTO CURSO(IDCURSO, NOME)VALUES(1, 'Análise e Desenvolvimento de Sistemas');

INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(01,80,'Introdução a Programação de Computadores');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(02,40,'Engenharia de Requisitos');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(03,80,'Modelagem de Dados');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(04,40,'Introdução a Computação');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(05,80,'Programação Orientada a Objetos');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(06,40,'Estrutura de Dados');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(07,20,'Análise Estruturada de Sistemas');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(08,20,'Análise Orientada a Objetos');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(09,80,'Sistemas de Gerenciamento de Banco de Dados'); 
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(10,80,'Desenvolvimento para Desktop');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(11,40,'Arquitetura de Sistemas de Software e Gestão da Informação'); 
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(12,40,'Qualidade e Testes de Software');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(13,80,'Arquitetura e Redes de Computadores');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(14,80,'Desenvolvimento Web');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(15,20,'Codificação de Segurança da Informação'); 
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(16,80,'Desenvolvimento para Sistemas Embarcados');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(17,20,'Engenharia de Software');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(18,40,'Fundamentos de Projetos');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(19,80,'Desenvolvimento para Dispositivos Móveis');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(20,40,'Tópicos Especiais em ADS');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(21,40,'Legislação Aplicada a Informática');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(22,80,'Certificações em ADS');
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(01,1,1);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(02,1,1);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(03,1,1);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(04,1,1);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE, IDDISCIPLINA_REQUISITO)VALUES(05,1,2, 01);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(06,1,2);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(07,1,2);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(08,1,2);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE, IDDISCIPLINA_REQUISITO)VALUES(09,1,2, 03); 
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE, IDDISCIPLINA_REQUISITO)VALUES(10,1,3, 05);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(11,1,3); 
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(12,1,3);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(13,1,3);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE, IDDISCIPLINA_REQUISITO)VALUES(14,1,4, 10);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(15,1,4); 
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE, IDDISCIPLINA_REQUISITO)VALUES(16,1,4, 10);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(17,1,4);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(18,1,4);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE, IDDISCIPLINA_REQUISITO)VALUES(19,1,5, 16);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(20,1,5);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(21,1,5);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(22,1,5);
INSERT INTO CURSO(IDCURSO, NOME)VALUES(2, 'Gestão da Tecnologia da Informação');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(23,40,'Teorias Organizacionais');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(24,20,'Modelagem de Processos');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(25,40,'Gestão de Infraestrutura de Hardware');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(26,40,'Gestão de Infraestrutura de Software');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(27,80,'Lógica de Programação');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(28,20,'Fundamentos da Pesquisa');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(29,20,'Empreendedorismo');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(30,20,'Princípios de Finanças');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(31,20,'Gestão de Infraestrutura de Rede');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(32,80,'Gestão de Banco de Dados');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(33,80,'Fundamentos de Projetos');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(34,20,'Metodologia do Trabalho Científico');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(35,40,'Comunicação e Endomarketing');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(36,20,'Comportamento Organizacional');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(37,80,'Processos de Desenvolvimento de Software');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(38,20,'Tecnologias de Comunicação Digital');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(39,80,'Planejamento de Projetos');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(40,20,'Inteligência Competitiva');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(41,20,'Tecnologia e Desenvolvimento Sustentável');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(42,40,'Legislação e Ética Aplicada à TI');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(43,80,'Gerenciamento de Serviços de TI');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(44,80,'Gerenciamento de Projetos');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(45,20,'Governança de TI');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(46,20,'Gestão e Análise de Investimento');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(47,40,'Planejamento Estratégico');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(48,40,'Gestão de Equipes Tópicos Especiais em TI');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(49,40,'Segurança da Informação');
INSERT INTO DISCIPLINA(IDDISCIPLINA, CARGA_HORARIA, NOME)VALUES(50,80,'Trabalho de Conclusão de Último Semestre');
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(23,2,1);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(24,2,1);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(25,2,1);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(26,2,1);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(27,2,1);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(28,2,1);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(29,2,2);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(30,2,2);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(31,2,2);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(32,2,2);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE, IDDISCIPLINA_REQUISITO)VALUES(33,2,2,23);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(34,2,2);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(35,2,3);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(36,2,3);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(37,2,3);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(38,2,3);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE, IDDISCIPLINA_REQUISITO)VALUES(39,2,3, 33);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(40,2,4);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(41,2,4);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(42,2,4);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(43,2,4);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE, IDDISCIPLINA_REQUISITO)VALUES(44,2,4, 39);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(45,2,5);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(46,2,5);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE, IDDISCIPLINA_REQUISITO)VALUES(47,2,5, 44);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(48,2,5);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(49,2,5);
INSERT INTO GRADECURRICULAR(IDDISCIPLINA, IDCURSO, SEMESTRE)VALUES(50,2,5);

DELIMITER $$

CREATE PROCEDURE MATRICULAR(pIDALUNO INT,pANOMATRICULA INT,pSEMESTREMATRICULA INT)
BEGIN
		DECLARE vIDCURSO INT;
		DECLARE JAPOSSUIDISCIPLINAS INT;
		DECLARE vSITUACAO INT DEFAULT 0;
		DECLARE SITUCAOPRIMEIROSEMESTRE INT;
		
		-- BUSCA O ID DO CURSO DO ALUNO 
		SELECT IDCURSO INTO vIDCURSO FROM ALUNO WHERE IDALUNO =  pIDALUNO;
		-- VERIFICA SE O ALUNO TEM DISCIPLINAS 
		SELECT COUNT(*) INTO JAPOSSUIDISCIPLINAS FROM MATRICULA WHERE IDALUNO = pIDALUNO;
		
		-- VERIFICA SE O ALUNO JÁ TEM MATRICULA NO PRIMEIRO SEMESTRE
		
		SELECT COUNT(*) INTO SITUCAOPRIMEIROSEMESTRE FROM MATRICULA WHERE SEMESTRE = 1 AND SITUACAO IS NULL;
		
		-- VERIFICA REPROVAÇÃO DO SEMESTRE ANTERIOR
		IF pSEMESTREMATRICULA >= 2 THEN 
			SELECT COUNT(*) INTO vSITUACAO FROM MATRICULA WHERE IDALUNO = pIDALUNO AND SEMESTRE = ( pSEMESTREMATRICULA - 1 ) AND (SITUACAO = "Reprovado" OR SITUACAO IS NULL);
		END IF;
	
		-- SENDO MAIOR QUE 0, CADASTRA NORMALMENTE, NO SEMESTRE SOLICITADO NO PARÂMETRO DA PROCEDURE
		IF JAPOSSUIDISCIPLINAS > 0 AND vSITUACAO = 0 THEN
			-- REALIZA A MATRICULA
			INSERT INTO MATRICULA (IDALUNO, IDDISCIPLINA,ANO,SEMESTRE)  
			SELECT pIDALUNO,IDDISCIPLINA,pANOMATRICULA,pSEMESTREMATRICULA FROM GRADECURRICULAR WHERE  IDCURSO = vIDCURSO AND SEMESTRE = pSEMESTREMATRICULA;
		ELSE IF pSEMESTREMATRICULA <> 2 AND pSEMESTREMATRICULA  <> 3 AND pSEMESTREMATRICULA <> 4 THEN 
			-- REALIZA A MATRICULA NO PRIMEIRO SEMESTRE CASO NÃO TENHA NENHUMA, MATRICULA
			
			SELECT COUNT(*) INTO vSITUACAO FROM MATRICULA WHERE IDALUNO = pIDALUNO AND SEMESTRE = ( pSEMESTREMATRICULA - 1 ) AND (SITUACAO = "Reprovado" OR SITUACAO IS NULL);

			INSERT INTO MATRICULA (IDALUNO, IDDISCIPLINA,ANO,SEMESTRE)  
			SELECT pIDALUNO,IDDISCIPLINA,pANOMATRICULA,1 FROM GRADECURRICULAR WHERE  IDCURSO = vIDCURSO AND SEMESTRE = 1;
		END IF;
	END IF;
END $$
-- QUANTO HOUVER UMA MATRICULA, SERÁ CRIADO AUTOMÁTICAMENTE DOIS CONCEITOS NA TABELA DE CONCEITOS;
CREATE TRIGGER TR_CONCEITO_AI AFTER INSERT ON MATRICULA FOR EACH ROW
BEGIN
	INSERT INTO CONCEITO (IDALUNO,IDMATRICULA,INDICADOR,CONCEITO) VALUES (NEW.IDALUNO,NEW.IDMATRICULA,"INDICADORA","Não Avalida");
	INSERT INTO CONCEITO (IDALUNO,IDMATRICULA,INDICADOR,CONCEITO) VALUES (NEW.IDALUNO,NEW.IDMATRICULA,"INDICADORB","Não Avalida");
END $$

CREATE PROCEDURE FECHAMENONOTAS()
BEGIN
	 DECLARE QUANTIDADE_REGISTROS INT;
     DECLARE CONTADOR INT DEFAULT 1;
     DECLARE vIDMATRICULA INT;
     DECLARE vINDICADORA TEXT;
	 DECLARE vINDICADORB TEXT;
     
     SELECT COUNT(*) INTO QUANTIDADE_REGISTROS FROM CONCEITO;
          
     WHILE CONTADOR <= QUANTIDADE_REGISTROS DO 
		SELECT INDICADOR  INTO vINDICADORA FROM CONCEITO WHERE IDMATRICULA = CONTADOR AND INDICADOR = "INDICADORA" ;
		SELECT INDICADOR  INTO vINDICADORB FROM CONCEITO WHERE IDMATRICULA = CONTADOR AND INDICADOR = "INDICADORB" ;
        
        
        IF vINDICADORA <> "insatisfatório" AND vINDICADORB <> "insatisfatório" THEN
			UPDATE MATRICULA SET FINALIZADA = "S" WHERE IDMATRICULA = CONTADOR;
        END IF;
        
		SET CONTADOR = CONTADOR + 1;
     END WHILE;
     
END $$

CREATE TRIGGER TR_VERIFICA_CONCEITO_BU BEFORE UPDATE ON CONCEITO FOR EACH ROW 
BEGIN
	
	DECLARE FINALIZADA TEXT;
    
    SELECT FINALIZADA INTO FINALIZADA FROM MATRICULA WHERE IDMATRICULA = NEW.IDMATRICULA;
    
    IF FINALIZADA = "S" THEN 
		SIGNAL SQLSTATE "45000" SET MESSAGE_TEXT = "CONCEITO JÁ APLICADO, NÃO É POSSÍVEL ATUALIZAR O INDICADOR";
    END IF ;
END $$

CREATE TRIGGER TR_DISCIPLINA_PREREQUISITO_BI BEFORE INSERT ON MATRICULA FOR EACH ROW 
BEGIN

	DECLARE vSITUACAO TEXT;
    DECLARE vIDDISCIPLINA_REQUISITO_SITUACAO TEXT;
    
    SELECT 
    IDDISCIPLINA_REQUISITO 
    INTO vIDDISCIPLINA_REQUISITO_SITUACAO 
    FROM GRADECURRICULAR 
    WHERE 
		IDDISCIPLINA = NEW.IDDISCIPLINA;
        
	SELECT SITUACAO INTO vSITUACAO FROM MATRICULA WHERE IDALUNO = NEW.IDALUNO AND IDDISCIPLINA = vIDDISCIPLINA_REQUISITO_SITUACAO;
    
    IF vSITUACAO = "S" THEN 
		SIGNAL SQLSTATE "45000" SET MESSAGE_TEXT = "A DISCIPLINA TEM PRÉ REQUISITO,É NECESSÁRIO QUE REFAZER A DISCIPLINA ANTERIOR";
    END IF ;
END $$

CREATE FUNCTION ENADE (pIDALUNO INT) RETURNS TEXT 
BEGIN
	
    DECLARE MESSAGE TEXT;
    DECLARE PERCENTUAL INT;
	DECLARE SOMADASHORAS INT;

	SELECT
	SUM(DISCIPLINA.CARGA_HORARIA) 
    INTO SOMADASHORAS
	FROM GRADECURRICULAR
		INNER JOIN DISCIPLINA ON
		GRADECURRICULAR.IDDISCIPLINA = DISCIPLINA.IDDISCIPLINA
		INNER JOIN MATRICULA ON
		MATRICULA.IDDISCIPLINA = DISCIPLINA.IDDISCIPLINA
	WHERE 
		MATRICULA.IDALUNO = pIDALUNO ;
    

	SELECT
	((SUM(DISCIPLINA.CARGA_HORARIA) / SOMADASHORAS) * 100)
    INTO PERCENTUAL
	FROM GRADECURRICULAR
		INNER JOIN DISCIPLINA ON
		GRADECURRICULAR.IDDISCIPLINA = DISCIPLINA.IDDISCIPLINA
		INNER JOIN MATRICULA ON
		MATRICULA.IDDISCIPLINA = DISCIPLINA.IDDISCIPLINA
	WHERE 
		MATRICULA.IDALUNO = pIDALUNO AND
		MATRICULA.SITUACAO = "Aprovado";
        
    IF PERCENTUAL <= 25 THEN
		SET MESSAGE = CONCAT("Apto como ingressante, ",PERCENTUAL,"% da carga horária concluída");
    ELSE IF PERCENTUAL > 25 AND PERCENTUAL < 100 THEN
    		SET MESSAGE = CONCAT("Apto como concluínte, ",PERCENTUAL,"% da carga horária concluída");
	ELSE IF PERCENTUAL = 100 THEN 
				SET MESSAGE = CONCAT("dispensado, ",PERCENTUAL, "% da carga horária concluída");
			END IF;
		END IF;
    END IF;
    
RETURN MESSAGE;
    
END $$

DELIMITER ;
-- CRIA OS ALUNOS 
INSERT INTO ALUNO (IDALUNO,IDCURSO, NOME) VALUES (1,2,"Jadson Santos");
INSERT INTO ALUNO (IDALUNO,IDCURSO, NOME) VALUES (2,2,"Eduardo Santos");
INSERT INTO ALUNO (IDALUNO,IDCURSO, NOME) VALUES (3,2,"Bruna");


-- CHAMA PROCEDURE QUE CADASTRA O ALUNO NAS DISCIPLINAS, DE ACORDO COM O SEMESTRE
CALL MATRICULAR(1,YEAR(NOW()),1);
UPDATE MATRICULA SET SITUACAO  = "Aprovado" WHERE IDALUNO = 1;
CALL MATRICULAR(1,YEAR(NOW()),2);
UPDATE MATRICULA SET SITUACAO  = "Aprovado" WHERE IDALUNO = 1;
CALL MATRICULAR(1,YEAR(NOW()) + 1,3);
UPDATE MATRICULA SET SITUACAO  = "Aprovado" WHERE IDALUNO = 1;
CALL MATRICULAR(1,YEAR(NOW()) + 2,4);
UPDATE MATRICULA SET SITUACAO  = "Aprovado" WHERE IDALUNO = 1;

CALL MATRICULAR(2,YEAR(NOW()),1);
UPDATE MATRICULA SET SITUACAO  = "Reprovado" WHERE IDALUNO = 2;

CALL MATRICULAR(3,YEAR(NOW()),1);
UPDATE MATRICULA SET SITUACAO  = "Aprovado" WHERE IDALUNO = 3;


CALL FECHAMENONOTAS();

SELECT * FROM GRADECURRICULAR;
SELECT * FROM MATRICULA ;
SELECT * FROM CONCEITO;
SELECT * FROM DISCIPLINA;

SELECT ENADE(1);

