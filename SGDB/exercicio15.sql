DROP DATABASE IF EXISTS DBCONTACORRENTE;

CREATE DATABASE DBCONTACORRENTE;

USE DBCONTACORRENTE;

CREATE TABLE CLIENTE(
IDCLIENTE INT NOT NULL PRIMARY KEY AUTO_INCREMENT
, NOME VARCHAR(100)
, CPF CHAR(11)
);
CREATE TABLE CONTA (
IDCONTA INT NOT NULL PRIMARY KEY AUTO_INCREMENT
, IDCLIENTE INT NOT NULL
, DT_ABERTURA DATE
, LIMITE_CREDITO NUMERIC(8,2)
, TIPO ENUM('CONTA-CORRENTE', 'POUPANÇA')
, FOREIGN KEY (IDCLIENTE) REFERENCES CLIENTE (IDCLIENTE)
);
CREATE TABLE MOVIMENTACAO(
IDMOVIMENTACAO INT NOT NULL PRIMARY KEY AUTO_INCREMENT
, IDCONTA INT NOT NULL
, DT_MOVIMENTACAO DATE
, VALOR NUMERIC(8,2)
, TIPO ENUM("DEPOSITO", "SAQUE")
, OBSERVACAO TEXT
, FOREIGN KEY (IDCONTA) REFERENCES CONTA (IDCONTA)
);

INSERT INTO CLIENTE VALUES (1,'JADSON',"00000000000");

INSERT INTO CONTA VALUES (1,1,'2020-12-21',500000.00,'POUPANÇA');
INSERT INTO CONTA VALUES (2,1,'2020-12-21',500000.00,'CONTA-CORRENTE');

INSERT INTO MOVIMENTACAO VALUES (NULL,1,NOW(),500000,'DEPOSITO', NULL);


SET GLOBAL log_bin_trust_function_creators = 1;

DELIMITER $$

CREATE PROCEDURE PR_MOVIMENTACAO(ID INT,VALOR NUMERIC(8,2) ,vTIPO TEXT)
BEGIN

    DECLARE vCONTA NUMERIC(8,2);
    DECLARE vSAQUE NUMERIC(8,2);
    DECLARE vDEPOSITO NUMERIC(8,2);
    DECLARE vTIPO_CONTA TEXT;
    DECLARE vCREDITO NUMERIC(8,2);

    SELECT 
    IFNULL(SUM(VALOR),0) 
    INTO vDEPOSITO 
    FROM MOVIMENTACAO 
    WHERE IDCONTA = ID AND TIPO = "DEPOSITO" ;

    SELECT 
    IFNULL(SUM(VALOR), 0) 
    INTO vSAQUE 
    FROM MOVIMENTACAO 
    WHERE IDCONTA = ID AND TIPO = "SAQUE" ;

    SELECT 
    TIPO
    INTO vTIPO_CONTA
    FROM CONTA
    WHERE IDCONTA = ID;

    SELECT 
    LIMITE_CREDITO
    INTO vCREDITO 
    FROM CONTA 
    WHERE IDCONTA = ID;
    
    SET vCONTA = vDEPOSITO - vSAQUE;

    IF vCONTA >= 0 AND vTIPO = "SAQUE" AND vTIPO_CONTA = "POUPANÇA" THEN
      INSERT INTO MOVIMENTACAO (IDMOVIMENTACAO,IDCONTA,DT_MOVIMENTACAO,VALOR,TIPO) VALUES (NULL,ID,NOW(),VALOR,vTIPO);
    END IF;

    
    IF vCONTA >= 0 AND vTIPO = "SAQUE" AND vTIPO_CONTA = "CONTA-CORRENTE" AND VALOR <= vCREDITO THEN
      INSERT INTO MOVIMENTACAO (IDMOVIMENTACAO,IDCONTA,DT_MOVIMENTACAO,VALOR,TIPO) VALUES (NULL,ID,NOW(),VALOR,vTIPO);
    END IF;

    IF vCONTA >= 0 AND vTIPO = "DEPOSITO" THEN
      INSERT  INTO MOVIMENTACAO (IDMOVIMENTACAO,IDCONTA,DT_MOVIMENTACAO,VALOR,TIPO) VALUES (NULL,ID,NOW(),VALOR,vTIPO);
    END IF;
    
END $$

CREATE PROCEDURE PR_TRANFERENCIA(IDORIGEM INT, IDDESTINO INT, VALOR NUMERIC(8,2))
BEGIN
    DECLARE vCONTA NUMERIC(8,2);
    DECLARE vSAQUE NUMERIC(8,2);
    DECLARE vDEPOSITO NUMERIC(8,2);
    DECLARE vTIPO_CONTA TEXT;
    DECLARE vCREDITO NUMERIC(8,2);

    SELECT 
    IFNULL(SUM(VALOR),0) 
    INTO vDEPOSITO 
    FROM MOVIMENTACAO 
    WHERE IDCONTA = IDORIGEM AND TIPO = "DEPOSITO" ;

    SELECT 
    IFNULL(SUM(VALOR), 0) 
    INTO vSAQUE 
    FROM MOVIMENTACAO 
    WHERE IDCONTA = IDORIGEM AND TIPO = "SAQUE" ;

    SELECT 
    TIPO
    INTO vTIPO_CONTA
    FROM CONTA
    WHERE IDCONTA = IDORIGEM;

    SELECT 
    LIMITE_CREDITO
    INTO vCREDITO 
    FROM CONTA 
    WHERE IDCONTA = IDORIGEM;
    
    SET vCONTA = vDEPOSITO - vSAQUE;

    IF vCONTA > 0 AND vTIPO_CONTA = "POUPANÇA" THEN
     
    INSERT INTO MOVIMENTACAO (IDMOVIMENTACAO,IDCONTA,DT_MOVIMENTACAO,VALOR,TIPO,OBSERVACAO) VALUES (NULL,IDORIGEM,NOW(),VALOR,"SAQUE", CONCAT("TRANSFERÊNCIA DE ", VALOR, " SAIU DA CONTA" , IDORIGEM," PARA ", " CONTA ", IDDESTINO));
    INSERT INTO MOVIMENTACAO (IDMOVIMENTACAO,IDCONTA,DT_MOVIMENTACAO,VALOR,TIPO) VALUES (NULL,IDDESTINO,NOW(),VALOR,"DEPOSITO");

    END IF;

    IF vCONTA > 0 AND vTIPO_CONTA = "CONTA-CORRENTE" AND  VALOR <= vCREDITO THEN
     
    INSERT INTO MOVIMENTACAO (IDMOVIMENTACAO,IDCONTA,DT_MOVIMENTACAO,VALOR,TIPO,OBSERVACAO) VALUES (NULL,IDORIGEM,NOW(),VALOR,"SAQUE", CONCAT("TRANSFERÊNCIA DE ", VALOR, " SAIU DA CONTA" , IDORIGEM," PARA ", " CONTA ", IDDESTINO));
    INSERT INTO MOVIMENTACAO (IDMOVIMENTACAO,IDCONTA,DT_MOVIMENTACAO,VALOR,TIPO) VALUES (NULL,IDDESTINO,NOW(),VALOR,"DEPOSITO");
    
    END IF;

END $$

DELIMITER  ;



CREATE VIEW VW_SALDO AS SELECT LIMITE_CREDITO FROM CONTA;

CREATE 
VIEW VW_EXTRATO 
AS 
SELECT 
MOVIMENTACAO.TIPO, 
MOVIMENTACAO.OBSERVACAO,
CLIENTE.*
FROM MOVIMENTACAO 
  INNER JOIN CONTA ON 
  MOVIMENTACAO.IDCONTA = CONTA.IDCONTA
  INNER JOIN CLIENTE ON
  CONTA.IDCLIENTE = CLIENTE.IDCLIENTE; 


CALL PR_TRANFERENCIA(1,2,500.00);

SELECT * FROM VW_EXTRATO

SELECT * FROM VW_SALDO